[general]

transport=udp
bindport=5060
context=incoming
udpbindaddr=0.0.0.0
tcpenable=no
nat = force_rport,comedia
nat=yes
;localnet=192.168.1.1/255.255.255.0
externip=52.87.148.169
;deny=0.0.0.0/0.0.0.0
;permit=10.8.0.0/255.255.255.0;          **VPN**

allowsubscribe=yes
notifyringing=yes
notifyhold=yes
callcounter=yes
callevents=yes
qualify=yes
allowguest=no
disallow=all
allow=g722
allow=gsm
allow=alaw
allow=ulaw
;directmedia=yes
directmedia=no
limitonpeer=yes
notifycid=ignore-context


;register => 0348740005:wachtwoord@sip.i4ip.net;		Rofem-test	2 channels	0348740005	fail-over

[sip_proxy] ** voor meerdere klanten bij 1 profider **
; For incoming calls only. Example: FWD (Free World Dialup)
; We match on IP address of the proxy for incoming calls
; since we can not match on username (caller id)

;type=peer
;context=incoming
;canreinvite=no
;host=sip.i4ip.net
;qualify=no

;[sip_proxy-gntel]
;type=peer
;context=incoming
;canreinvite=no
;host=sip.gntel.nl
;qualify=no

;[i4ip-rofem]
;type=friend
;secret=
;username=
;host=sip.i4ip.net
;dtmfmode=rfc2833
;canreinvite=no
;insecure=port,invite
;fromdomain=sip.i4ip.net
;qualify=no
;Parkinglot=parkinglot_rofem


[test-sets](!)
type=friend
dtmfmode=rfc2833
host=dynamic
canreinvite=no
sendrpid=yes
qualify=no
secret=r;
context=phones;
;deny=0.0.0.0/0.0.0.0
;permit=10.8.0.0/255.255.255.0;          **VPN**

[roy]
type=friend
context=phones
allow=ulaw,alaw
secret=roy
host=dynamic


[jan]
type=friend
context=phones
allow=ulaw,alaw
secret=jan
host=dynamic


[roymobile]
type=friend
context=phones
allow=ulaw,alaw
secret=roymobile
host=dynamic


[roym]
type=friend
context=phones
allow=ulaw,alaw
secret=roym
host=dynamic


[112233]
type=friend
context=phones
allow=ulaw,alaw
secret=112233
host=dynamic

;[331](test-sets);
;type=friend
;dtmfmode=rfc2833
;host=dynamic
;canreinvite=no
;sendrpid=yes
;qualify=no
;nat=yes
;secret=r;
;context=phones;
;callerid="331" <331>;

[300](test-sets);
callerid="300" <300>;
[301](test-sets);
callerid="301" <301>;
[302](test-sets);
callerid="302" <302>;
[303](test-sets);
callerid="303" <303>;
[304](test-sets);
callerid="304" <304>;
[305](test-sets);
callerid="305" <305>;
[306](test-sets);
callerid="306" <306>;
[307](test-sets);
callerid="307" <307>;
[308](test-sets);
callerid="308" <308>;
[309](test-sets);
callerid="309" <309>;
[310](test-sets);
callerid="310" <310>;
[311](test-sets);
callerid="311" <311>;
[312](test-sets);
callerid="312" <312>;
[313](test-sets);
callerid="313" <313>;
[314](test-sets);
callerid="314" <314>;
[315](test-sets);
callerid="315" <315>;
[316](test-sets);
callerid="316" <316>;
[317](test-sets);
callerid="317" <317>;
[318](test-sets);
callerid="318" <318>;
[319](test-sets);
callerid="319" <319>;
[320](test-sets);
callerid="320" <320>;
[321](test-sets);
callerid="321" <321>;
[322](test-sets);
callerid="322" <322>;
[323](test-sets);
callerid="323" <323>;
[324](test-sets);
callerid="324" <324>;
[325](test-sets);
callerid="325" <325>;
[326](test-sets);
callerid="326" <326>;
[327](test-sets);
callerid="327" <327>;
[328](test-sets);
callerid="328" <328>;
[329](test-sets);
callerid="329" <329>;
[330](test-sets);
callerid="330" <330>;
[331](test-sets);
callerid="331" <331>;
[332](test-sets);
callerid="332" <332>;
[333](test-sets);
callerid="333" <333>;
[334](test-sets);
callerid="334" <334>;
[335](test-sets);
callerid="335" <335>;
[336](test-sets);
callerid="336" <336>;
[337](test-sets);
callerid="337" <337>;
[338](test-sets);
callerid="338" <338>;
[339](test-sets);
callerid="339" <339>;

